/**
 * Dakara project
 *
 * Controls style file
 */

.make-controls(@height, @font-size) {
    .control {
        .square(@height);
        line-height: @height;
        font-size: @font-size;
    }
}

.controls {
    display: flex;
    align-items: flex-end;

    .control {
        cursor: pointer;
        text-align: center;
        color: @body-background;

        &:nth-child(n+2) {
            margin-left: @gap-horizontal;
        }

        img {
            vertical-align: middle;
        }

        .make-control(@color-enabled, @color-disabled, @color-activated) {
            background: @color-enabled;

            &.disabled {
                background: @color-disabled;
                cursor: default;
            }

            &:not(.disabled):hover {
                background: @color-activated;
            }
        }

        &.primary{
            .make-control(@brand-primary, @brand-primary-dark, @brand-primary-light);
        }

        &.success{
            .make-control(@brand-success, @brand-success-dark, @brand-success-light);
        }

        &.warning{
            .make-control(@brand-warning, @brand-warning-dark, @brand-warning-light);
        }

        &.danger{
            .make-control(@brand-danger, @brand-danger-dark, @brand-danger-light);
        }

        &.info{
            .make-control(@brand-info, @brand-info-dark, @brand-info-light);
        }
    }
}

// lighten control when on even line of a list
li:nth-child(2n) .controls {
    .control {
        .make-control-line-even(@color-lighter, @color-dark-light) {
            background: @color-lighter;

            &.disabled {
                background: @color-dark-light;
            }
        }

        &.primary {
            .make-control-line-even(@brand-primary-lighter, lighten(@brand-primary-dark, 2.5%));
        }

        &.success {
            .make-control-line-even(@brand-success-lighter, lighten(@brand-success-dark, 2.5%));
        }

        &.warning {
            .make-control-line-even(@brand-warning-lighter, lighten(@brand-warning-dark, 2.5%));
        }

        &.danger {
            .make-control-line-even(@brand-danger-lighter, lighten(@brand-danger-dark, 2.5%));
        }

        &.info {
            .make-control-line-even(@brand-info-lighter, lighten(@brand-info-dark, 2.5%));
        }
    }
}

// lighten control when line hovered on a list
li:hover .controls {
    .make-control-line-hover(@color-light) {
        background: @color-light;
    }

    .control:not(.disabled) {
        &.primary {
            .make-control-line-hover(@brand-primary-light);
        }

        &.success {
            .make-control-line-hover(@brand-success-light);
        }

        &.warning {
            .make-control-line-hover(@brand-warning-light);
        }

        &.danger {
            .make-control-line-hover(@brand-danger-light);
        }

        &.info {
            .make-control-line-hover(@brand-info-light);
        }
    }

    .control.disabled {
        &.primary {
            .make-control-line-hover(lighten(@brand-primary-dark, 5%));
        }

        &.success {
            .make-control-line-hover(lighten(@brand-success-dark, 5%));
        }

        &.warning {
            .make-control-line-hover(lighten(@brand-warning-dark, 5%));
        }

        &.danger {
            .make-control-line-hover(lighten(@brand-danger-dark, 5%));
        }

        &.info {
            .make-control-line-hover(lighten(@brand-info-dark, 5%));
        }
    }
}
