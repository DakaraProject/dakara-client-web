//
// Dakara Project
//
// Listing style file
//


// `listing` class:
//
// The `listing` class is aimed to stylize every basic list of the Dakara
// Project. It gives a list with no borders where the entries look like rows
// with alternated colors. Each row can have an appearance/disappearance
// animation where the line grows or shrinks vertically from the top. Each row
// can have a notification which consists in an over-layer which slides in and out
// from the right border.
//
// The rows can have a different hover color whith is manually set with the
// `hoverizable` class. It can be applied to each listing entries or any of its
// child.
//
// The class does not assume anything about its use, wether it will contain
// flex-box elements or any other funny stuff.
//
// The class is specialized for the tag it applies on: `ul` or `table`. The
// specialization for the list simply removes the marker. For the table, it
// removes all the quirks of its default display and corrects the behavior of
// the `controls` class.
.listing {
    margin: 0;
    padding: 0;
    overflow-x: hidden;

    // background is darker than actual rows in order to separate them
    // when the listing has a fixed height
    background: darken(@neutral-mid, 3%);

    .listing-header {
        height: @listing-entry-height;
    }

    .listing-entry {
        // normal and alternate row colors
        background: @neutral-mid;

        &:nth-child(2n) {
            background: @neutral-mid-light;
        }

        // optionnal hoverizable feature
        // can be applied to the listing-entry itself or any of its children
        .hoverizable,
        &.hoverizable {
            &:hover,
            &:focus {
                background: @neutral-mid-lighter;
            }
        }

        // appearance transition
        &.add-remove-enter {
            overflow: hidden;
            height: 0;

            &.add-remove-enter-active {
                height: @listing-entry-height;
                .transition(height 300ms ease-out);
            }
        }

        // disappearance transition
        &.add-remove-leave {
            overflow: hidden;
            height: @listing-entry-height;

            &.add-remove-leave-active {
                height: 0;
                .transition(height 150ms ease-out);

                &.delayed {
                    .transition-delay(500ms);
                }
            }
        }

        // manage controls
        .controls {
            .make-controls(@listing-entry-height, @listing-entry-control-font-size);
        }

        // notification
        .notified {
            height: @listing-entry-height;
            line-height: @listing-entry-height;
        }
    }
}

// Specialization for lists
ul.listing {
    list-style-type: none;
}

// Specialization for tables
table.listing {
    width: 100%;
    border-collapse: collapse;

    // make the controls column as small as possible
    .controls {
        width: 1px;
        white-space: nowrap;

        // remove the flex display
        display: table-cell;

        // default is 1px, but no idea for the reason why
        padding: 0;
    }

    // remove default bold
    .listing-header > th {
        font-weight: normal;
    }
}
