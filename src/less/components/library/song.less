//
// Dakara Project
//
// Song library entry style file
//


// `library-entry-song` subclass:
//
// This class is a specialization of the `listing-entry` class defined in the
// `listing` module. It is aimed to stylize the specific elements of a list of
// songs.
//
// The song can be represented in a compact, one-line view or in an expanded,
// multi-lines view. More elements are present in the expanded view, which takes
// usually more space and have larger margins compared to the compact view. The
// compact view stays even if the expandes view is displayed, it only contains
// less elements. The expanded view has a appearance/disappearance animation
// where the expanded line grows or shrink vertically from the top.
//
// This list entry is not hoverizable, in order to make only the compact view
// react to hover.
.library-entry.library-entry-song {
    // `library-entry-song-compact` class: song compact view.
    // This class must be used with the `hoverizable` subclass.
    .library-entry-song-compact {
        display: flex;

        // `song` subclass: the song itself.
        .song {
            flex: 1;
            cursor: pointer;
            min-height: @listing-entry-height;

            .general {
                .make-vertical-row-padding(horizontal);

                .make-smartphone({
                    flex-direction: column;
                    align-items: initial;

                    .artist-work {
                        .work-link {
                            .work-link.make-reverse();
                        }

                        .artists {
                            text-align: left;
                        }

                        // for small devices, hide the artist if there is one work
                        .work-link + .artists {
                            display: none;
                        }
                    }
                });
            }
        }

        .play-queue-info-wrapper {
            display: flex;
        }
    }

    // if the song si expanded, disable truncature of text in song header
    &.expanded .library-entry-song-compact .song .general .header {
        // disallow text truncate, thus allow text to spread on several lines
        .text-untruncate();

        // allow words to break
        overflow-wrap: break-word;
    }

    // `library-entry-song-expanded` class: song expanded view.
    // It should not be used with the `hoverized` subclass, otherwise some hover
    // will be wrong.
    // The class behaves like a table in order to keep a column of labels of the
    // same width. This does not go without consequenses, as a table element is
    // difficult to style.
    .library-entry-song-expanded {
        @height: @sublisting-entry-height;
        display: table;
        width: 100%;
        border-collapse: separate;
        border-spacing: 0 @gap-vertical;

        .make-smartphone({
            display: block;
            padding: @gap-vertical-smartphone 0;
        });

        .expanded-item {
            display: table-row;

            .make-smartphone({
                display: block;
            });

            &:not(:last-child) {
                .make-gap(padding, bottom);
            }

            .header {
                display: table-cell;
                font-weight: normal;
                white-space: nowrap;
                vertical-align: top;
                .make-gap(padding, horizontal);

                .make-smartphone({
                    display: block;
                });

                .icon {
                }

                .name {
                   padding-left: 0.5em; 
                   line-height: @height;
                }
            }

            .sublisting-entry {
                // allow words to break
                overflow: hidden;

                // keep control buttons stretched
                .controls {
                    align-self: stretch;

                    .control {
                        height: unset;
                    }
                }
            }

            .text, .song-tag-list, .paragraph {
                background: darken(@neutral-mid, 2%);
            }

            .text, .paragraph, .artist, .work-link {
                // allow words to break
                overflow: hidden;
                overflow-wrap: break-word;

                .make-vertical-row-padding(horizontal, 2);
            }

            .text {
                min-height: @height;
                display: flex;
                align-items: center;
            }

            .song-tag-list {
                line-height: @height;

                .tag {
                    height: @height;
                }
            }

            &.works {
                .sublisting-entry {
                    .work-link {
                        flex: 1;
                        display: block;
                        white-space: unset;

                        .title-group {
                            white-space: unset;
                        }

                        .link {
                            font-size: 0.81em;
                        }
                    }
                }
            }

            &.artists {
                .artist {
                    flex: 1;
                }
            }

            &.lyrics .paragraph {
                .line:not(:last-child) {
                    margin-bottom: 0.25em;
                }

                &.truncated {
                    .line:last-child::after {
                        content: "â€¦";
                        font-size: 1.5em;
                        line-height: 0;
                    }
                }
            }
        }
    }

    // `library-entry-song-expanded-wrapper` class: wrapper class to enable or
    // disable the expanded view.
    // This wrapper is mandatory because `library-entry-song-expanded` is a
    // table and thus its `max-height` property cannot be animated.
    .library-entry-song-expanded-wrapper {
        // appearance transition of the expanded view
        &.expand-view-enter {
            overflow: hidden;
            max-height: 0;

            &.expand-view-enter-active {
                max-height: 10 * 0.75 * @listing-entry-height;
                transition: max-height 600ms ease-out;
            }
        }

        // disappearance transition of the expanded view
        &.expand-view-exit {
            overflow: hidden;
            max-height: 10 * 0.75 * @listing-entry-height;

            &.expand-view-exit-active {
                max-height: 0;
                transition: max-height 300ms ease-out;
            }
        }
    }
}
