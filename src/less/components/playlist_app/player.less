//
// Dakara Project
//
// Player style file
//


// player sizes
@player-controls-height: 7rem;
@player-progressbar-height: 0.4rem;
@player-height: 2 * @gap-vertical + @player-controls-height + @player-progressbar-height;
@player-height-smartphone: 2 * @gap-vertical-smartphone + @player-controls-height + @player-progressbar-height;


// `player` id:
//
// This component stylizes the player, containing controls, song info and a
// progression bar.
#player {
    background: @brand-primary-darker;
    color: @brand-primary;

    // `display-area` class: the main part of the player displays the current
    // song, its numerical progression and the controls of the player.
    .display-area {
        display: flex;
        align-items: center;
        .make-gap(padding, vertical);

        .notifiable {
            .make-gap(margin, left);
            overflow: hidden;
            width: 100%;

            // `notified` subclass: notification banner.
            .notified {
                line-height: @player-controls-height;
                height: @player-controls-height;
            }
        }

        // `song-container` class: container for info of the song.
        .playlist-entry {
            flex: 1;
            display: flex;
            justify-content: flex-end;

            position: relative;
            overflow: hidden;

            // `song` subclass: the song itself.
            .song {
                .make-gap(margin, right);
                flex: 1;
                height: @player-controls-height;
                flex-direction: column;
                align-content: flex-start;
                align-items: initial;
                overflow: hidden;

                .general {
                    flex-direction: column;
                }
                .header {
                    flex-grow: initial;
                    font-size: 1.45em;
                    font-weight: 300;

                    .title {
                    }

                    .version {
                    }
                }

                .artist-work {
                    margin: 0;

                    .artists {
                        text-align: left;
                    }

                    .work-link {
                        .work-link.make-reverse();

                        .link {
                            border-color: shade(@brand-primary, 25%);
                        }
                    }
                }
            }

            .extra {
                .make-gap(margin, right);
                display: flex;
                flex-direction: column;

                .make-extra(@ratio-extra, @ratio-timing, @font-weight-current, @font-weight-duration) {
                    .timing {
                        @height: @ratio-extra * @player-controls-height;

                        .current {
                            font-size: @height * @ratio-timing;
                            line-height: @height * @ratio-timing;
                            font-weight: @font-weight-current;
                        }

                        .duration {
                            font-size: @height * (1 - @ratio-timing);
                            line-height: @height * (1 - @ratio-timing);
                            font-weight: @font-weight-duration;
                        }
                    }

                    .owner {
                        @height: (1 - @ratio-extra) * @player-controls-height;
                        line-height: @height;
                    }
                }

                .make-extra(0.8, 0.7, 100, initial);
                .make-smartphone({
                    .make-extra(0.7, 0.6, 100, 300);
                });

                // `song-timing` class: current progression of the song in numerical
                // form.
                .timing {
                    @ratio-timing: 0.6;
                    display: flex;
                    flex-direction: column;
                    justify-content: center;

                    .current {
                    }

                    .duration {
                        text-align: right;
                    }
                }

                // `playlist-entry-owner` class: owner of the playlist entry.
                .owner {
                    text-align: right;

                    .icon {
                        font-size: 1em;
                    }
                }
            }
        }
    }

    // `progressbar` class: supplementary visual indicator of the song current
    // progression.
    .progressbar {
        width: 100%;
        height: @player-progressbar-height;

        .progress {
            height: 100%;
            background: @brand-primary-dark;
        }
    }

    // `controls` subclass: buttons of the player.
    .controls {
        .control {
            overflow: hidden;
            position: relative;

            &.managed-error .managed.managed-enter {
                left: -100%;
            }

            .managed {
                position: absolute;
                line-height: inherit;
                width: inherit;
                top: 0;
                left: 0;

                // appearance transition
                &.managed-enter {
                    left: 100%;

                    &.managed-enter-active {
                        left: 0;
                        transition: left 150ms ease-out;
                    }
                }

                // appearance transition
                &.managed-exit {
                    left: 0;

                    &.managed-exit-active {
                        left: -100%;
                        transition: left 150ms ease-out;
                    }
                }
            }
        }
    }

    .controls.main {
        .make-controls(@player-controls-height, 1.66em);
    }

    .controls.other {
        overflow: hidden;
        .make-gap(padding, bottom);
        transition: height 150ms,
                    padding-bottom 150ms;

        &.reduced {
            height: 0;
            padding-bottom: 0;
            transition: height 150ms,
                        padding-bottom 150ms;
        }

        .make-controls(@row-height * 0.6, 1.1em);

        > .control {
            width: @row-height;
        }
    }
}
