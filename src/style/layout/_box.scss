//
// Dakara Project
//
// Box style file
//

@use 'sass:color';

@use '~/abstracts/colors';
@use '~/abstracts/controls';
@use '~/abstracts/sizes';
@use '~/abstracts/support';

// box sizes
$ribbon-control-height: sizes.$row-height;

// `box` class:
//
// This class is aimed to style a generic box container in the layout. It can
// be subclassed to be of a specific color (`primary`, `success`, `warning`,
// `danger`, or `info`). The box has direct child classes corresponding to its
// different parts: a `header`, a `footer`, and a `content`. All of them are
// optional. The `header` and the `footer` have a primary color by default and
// have their own vertical gaps. The `content` has no color. In case of color
// subclass, all elements are of the same requested color. The `content`
// creates vertical gaps to isolate its elements. If the box has a color
// subclass, top gap of the `content`, respectively bottom gap, is deactivated
// if a `header` immediately precedes it, respectively if a `footer`
// immediately succeeds it. The content can have a ribbon.
//
// Example without color subclass, with header and footer:
// +-------------------+
// |                   |
// | Header            |
// |                   |
// + - - - - - - - - - +
// |                   | < gap
// | Content           |
// |                   | < gap
// + - - - - - - - - - +
// |                   |
// | Footer            |
// |                   |
// +-------------------+
//
// Example without color subclass, with header and no footer:
// +-------------------+
// |                   |
// | Header            |
// |                   |
// + - - - - - - - - - +
// |                   | < gap
// | Content           |
// |                   | < gap
// +-------------------+
//
// Example with no color subclass and ribbon:
// +-------------------+
// |                   |
// | Header            |
// |                   |
// + - - - - - - - - - +
// |                   | < gap
// |/Ribbon////////////|
// | Content           |
// |                   | < gap
// + - - - - - - - - - +
// |                   |
// | Footer            |
// |                   |
// +-------------------+
//
// Example with color subclass, with header and footer:
// +-------------------+
// |                   |
// | Header            |
// |                   |
// | Content           | < no extra gap
// |                   |
// | Footer            |
// |                   |
// +-------------------+
//
// Example with color subclass, with header and no footer:
// +-------------------+
// |                   |
// | Header            |
// |                   |
// | Content           | < no extra gap
// |                   | < gap
// +-------------------+
//
// Example with color subclass, with header, no footer and another element:
// +-------------------+
// |                   |
// | Header            |
// |                   |
// | Other             |
// |                   | < gap
// | Content           |
// |                   | < gap
// +-------------------+
.box {
  // separation margin on desktop only
  @include support.make-desktop {
    &:not(:last-child) {
      margin-bottom: sizes.$gap-vertical;
    }

    // make last child pushed at the bottom
    &:last-child {
      margin-top: auto;
    }
  }

  // if not embedded
  &:not(.embedded) {
    box-shadow: 0 0 2rem color.change(black, $alpha: 0.5);
  }

  // if not subclassed
  &:not(.primary):not(.success):not(.warning):not(.danger):not(.info) {
    background: colors.$neutral-100;

    > .header,
    > .footer {
      @include sizes.make-gap(padding, vertical);

      & {
        background: colors.$primary-100;
        color: colors.$primary-400;
      }
    }
  }

  // if subclassed
  &.primary,
  &.success,
  &.warning,
  &.danger,
  &.info {
    > .header {
      @include sizes.make-gap(padding, top);
    }

    > .footer {
      @include sizes.make-gap(padding, bottom);
    }
  }

  > .header {
    > h2 {
      @include sizes.make-gap(padding, horizontal);
    }
  }

  > .content {
    @include sizes.make-gap(padding, vertical);

    // `ribbon` class:
    //
    // The ribbon is a colored sub-content used for emphasis. It can
    // contain a button that will be aligned on the right.
    .ribbon {
      @include sizes.make-gap(padding, vertical, 0.5);

      & {
        align-items: center;
        display: flex;
      }

      .message {
        flex: 1;
      }

      // subclass the controls with `free` to freely control their style
      .controls:not(.free) {
        @include controls.make-controls(
          $height: $ribbon-control-height,
          $square: true
        );
      }
    }

    h3,
    h4,
    h5,
    h6 {
      @include sizes.make-gap(padding, horizontal);
    }
  }

  // > .footer {
  // }

  p,
  ul {
    @include sizes.make-gap(margin, horizontal);

    // paragraphs have margin between them
    + p,
    + ul {
      margin-top: 0.5em;
    }
  }
}
