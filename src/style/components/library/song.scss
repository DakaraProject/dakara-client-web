//
// Dakara Project
//
// Song library entry style file
//


// `library-entry-song` subclass:
//
// This class is a specialization of the `listing-entry` class defined in the
// `listing` module. It is aimed to stylize the specific elements of a list of
// songs.
//
// The song can be represented in a compact, one-line view or in an expanded,
// multi-lines view. More elements are present in the expanded view, which takes
// usually more space and have larger margins compared to the compact view. The
// compact view stays even if the expandes view is displayed, it only contains
// less elements. The expanded view has a appearance/disappearance animation
// where the expanded line grows or shrink vertically from the top.
//
// This list entry is not hoverizable, in order to make only the compact view
// react to hover.
.library-entry.library-entry-song {
    // `library-entry-song-compact` class: song compact view.
    // This class must be used with the `hoverizable` subclass.
    .library-entry-song-compact {
        display: flex;

        @include make-smartphone {
            flex-direction: column;
        }

        // `song` subclass: the song itself.
        .song {
            cursor: pointer;
            flex: 1;
            min-height: $listing-entry-height;

            .general {
                @include make-vertical-row-padding(horizontal);

                @include make-smartphone {
                    align-items: initial;
                    flex-direction: column;

                    .artist-work {
                        @include make-smartphone {
                            display: none;
                        }

                        .work-link {
                            @include make-reverse();
                        }

                        .artists {
                            text-align: left;
                        }

                        // for small devices, hide the artist if there is one work
                        .work-link + .artists {
                            display: none;
                        }
                    }
                }
            }
        }

        // `extra` subclass: any other information
        .extra {
            background: darken($neutral-mid, 0.65%);
            display: flex;

            @include make-smartphone {
                height: $listing-entry-height;
                justify-content: flex-end;
            }

            .play-queue-info-wrapper {
                display: flex;
            }
        }

        &:hover .extra {
            background: darken($neutral-mid-lighter, 1%);
        }
    }

    &:nth-child(even) .extra {
        background: darken($neutral-mid-light, 1%);
    }

    // if the song si expanded, disable truncature of text in song header
    &.expanded .library-entry-song-compact .song .general .header {
        // disallow text truncate, thus allow text to spread on several lines
        @include text-untruncate();

        // allow words to break
        overflow-wrap: break-word;
    }

    // `library-entry-song-expanded` class: song expanded view.
    .library-entry-song-expanded {

        // It should not be used with the `hoverized` subclass, otherwise some
        // hover will be wrong.
        // The class behaves like a table in order to keep a column of labels
        // of the same width. This does not go without consequenses, as a table
        // element is difficult to style.
        .listing-expanded {
            $height: $sublisting-entry-height;
            border-collapse: separate;
            border-spacing: 0 $gap-vertical;
            display: table;
            width: 100%;

            @include make-smartphone {
                display: block;
                padding: $gap-vertical-smartphone 0;
            }

            .expanded-item {
                display: table-row;

                @include make-smartphone {
                    display: block;
                }

                &:not(:last-child) {
                    @include make-gap(padding, bottom);
                }

                .header {
                    @include make-gap(padding, horizontal);

                    display: table-cell;
                    font-weight: normal;
                    vertical-align: top;
                    white-space: nowrap;

                    @include make-smartphone {
                        display: block;
                    }

                    // .icon {
                    // }

                    .name {
                        line-height: $height;
                        padding-left: 0.5em;
                    }
                }

                .sublisting-entry {
                    // allow words to break
                    overflow: hidden;

                    // keep control buttons stretched
                    .controls {
                        align-self: stretch;

                        .control {
                            height: unset;
                        }
                    }
                }

                .text,
                .song-tag-list,
                .paragraph {
                    background: darken($neutral-mid, 2%);
                }

                .text,
                .paragraph,
                .artist,
                .work-link {
                    @include make-vertical-row-padding(horizontal, 2);

                    // allow words to break
                    overflow: hidden;
                    overflow-wrap: break-word;
                }

                .text {
                    align-items: center;
                    display: flex;
                    min-height: $height;
                }

                .song-tag-list {
                    line-height: $height;

                    .tag {
                        height: $height;
                    }
                }

                &.works {
                    .sublisting-entry {
                        .work-link {
                            display: block;
                            flex: 1;
                            white-space: unset;

                            .title-group {
                                white-space: unset;
                            }

                            .link {
                                font-size: 0.81em;
                            }
                        }
                    }
                }

                &.artists {
                    .artist {
                        flex: 1;
                    }
                }

                &.lyrics .paragraph {
                    .line:not(:last-child) {
                        margin-bottom: 0.25em;
                    }

                    &.truncated {
                        .line:last-child::after {
                            content: "â€¦";
                            font-size: 1.5em;
                            line-height: 0;
                        }
                    }
                }
            }

            &:empty + .instrumental {
                padding-top: $gap-vertical;
            }
        }

        .instrumental {
            padding-bottom: $gap-vertical;

            .controls {
                height: $listing-entry-height;
                justify-content: flex-end;

                .text {
                    line-height: $listing-entry-height;
                    padding-right: 0.5em;
                }

                .submit {
                    .icon {
                        position: relative;

                        .sub-icon {
                            font-size: 0.65em;
                            position: absolute;
                            right: -0.6em;
                            top: -0.5em;
                        }
                    }
                }
            }
        }
    }

    // `library-entry-song-expanded-wrapper` class: wrapper class to enable or
    // disable the expanded view.
    // This wrapper is mandatory because `library-entry-song-expanded` is a
    // table and thus its `max-height` property cannot be animated.
    .library-entry-song-expanded-wrapper {
        // appearance transition of the expanded view
        &.expand-view-enter {
            max-height: 0;
            overflow: hidden;

            &.expand-view-enter-active {
                max-height: 10 * 0.75 * $listing-entry-height;
                transition: max-height 600ms ease-out;
            }
        }

        // disappearance transition of the expanded view
        &.expand-view-exit {
            max-height: 10 * 0.75 * $listing-entry-height;
            overflow: hidden;

            &.expand-view-exit-active {
                max-height: 0;
                transition: max-height 300ms ease-out;
            }
        }
    }

    // fix appareance and disappearance transitions for moblie
    &.add-remove-enter.add-remove-enter-active,
    &.add-remove-exit {
        @include make-smartphone {
            height: (2 * $listing-entry-height);
        }
    }
}
