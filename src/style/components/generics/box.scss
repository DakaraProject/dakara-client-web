//
// Dakara Project
//
// Box style file
//


// `box` class:
//
// This class is aimed to style a generic box container in the layout. It can
// be subclassed to be of a specific color (`primary`, `success`, `warning`,
// `danger`, or `info`). The box has direct child classes corresponding to its
// different parts: a `header`, a `footer`, and a `content`. All of them are
// optional. The `header` and the `footer` have a primary color by default and
// have their own vertical gaps. The `content` has no color. In case of color
// subclass, all elements are of the same requested color. The `content`
// creates vertical gaps to isolate its elements. If the box has a color
// subclass, top gap of the `content`, respectively bottom gap, is deactivated
// if a `header` immediately precedes it, respectively if a `footer`
// immediately succeeds it. The content can have a ribbon.
//
// Example without color subclass, with header and footer:
// +-------------------+
// |                   |
// | Header            |
// |                   |
// + - - - - - - - - - +
// |                   | < gap
// | Content           |
// |                   | < gap
// + - - - - - - - - - +
// |                   |
// | Footer            |
// |                   |
// +-------------------+
//
// Example without color subclass, with header and no footer:
// +-------------------+
// |                   |
// | Header            |
// |                   |
// + - - - - - - - - - +
// |                   | < gap
// | Content           |
// |                   | < gap
// +-------------------+
//
// Example with no color subclass and ribbon:
// +-------------------+
// |                   |
// | Header            |
// |                   |
// + - - - - - - - - - +
// |                   | < gap
// |/Ribbon////////////|
// | Content           |
// |                   | < gap
// + - - - - - - - - - +
// |                   |
// | Footer            |
// |                   |
// +-------------------+
//
// Example with color subclass, with header and footer:
// +-------------------+
// |                   |
// | Header            |
// |                   |
// | Content           | < no extra gap
// |                   |
// | Footer            |
// |                   |
// +-------------------+
//
// Example with color subclass, with header and no footer:
// +-------------------+
// |                   |
// | Header            |
// |                   |
// | Content           | < no extra gap
// |                   | < gap
// +-------------------+
//
// Example with color subclass, with header, no footer and another element:
// +-------------------+
// |                   |
// | Header            |
// |                   |
// | Other             |
// |                   | < gap
// | Content           |
// |                   | < gap
// +-------------------+
.box {
    box-shadow: 0 0 2rem change-color(black, $alpha: 0.5);

    // separation margin on desktop only
    @include make-desktop {
        margin-bottom: $gap-vertical;
    }

    // if not subclassed
    &:not(.primary):not(.success):not(.warning):not(.danger):not(.info) {
        background: darken($black-80, 5%);

        > .header, > .footer {
            @include make-gap(padding, vertical);
            background: $brand-primary-darker;
            color: $brand-primary-light;
        }
    }

    // if subclassed
    &.primary, &.success, &.warning, &.danger, &.info {
        > .header {
            @include make-gap(padding, top);
        }

        > .footer {
            @include make-gap(padding, bottom);
        }
    }

    > .header {
        > h2 {
            @include make-gap(padding, horizontal);
        }
    }

    > .content {
        @include make-gap(padding, vertical);

        > .ribbon {
            @include make-gap(padding, vertical, 0.5);
        }
    }

    > .footer {
    }

    p {
        @include make-gap(margin, horizontal);

        // paragraphs have margin between them
        + p {
            margin-top: 0.5em;
        }
    }
}
